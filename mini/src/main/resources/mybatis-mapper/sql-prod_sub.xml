<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mini.mapper.ProdSubMapper">	
	<select id="selectWeddingList" parameterType="hashmap" resultType="com.example.mini.model.Wedding">
		SELECT W.WEDDINGNO,
			W_NAME,
			W_LOCATION,
			W_ADDR,
			W_URL,
			W_CDATETIME,
			IMGSRC
		FROM mini_db2.T1_WEDDING W
		LEFT JOIN mini_db2.T1_WEDDINGIMAGE WI ON WI.WEDDINGNO = W.WEDDINGNO
		WHERE 1=1
		<if test="wLocation != '' and wLocation != null">
				AND W_LOCATION = #{wLocation}
		</if>	
		LIMIT #{startNum}, 8
	</select>
		<select id="selectWeddingRecommendList" parameterType="hashmap" resultType="com.example.mini.model.Wedding">
		SELECT W.WEDDINGNO,
			W_NAME,
			W_LOCATION,
			W_ADDR,
			W_URL,
			W_CDATETIME,
			IMGSRC
		FROM mini_db2.T1_WEDDING W
		LEFT JOIN mini_db2.T1_WEDDINGIMAGE WI ON WI.WEDDINGNO = W.WEDDINGNO
	</select>
	<select id="selectWeddingCnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) AS CNT
		FROM mini_db2.T1_WEDDING
		WHERE 1=1
		<if test="wLocation != '' and wLocation != null">
				AND W_LOCATION = #{wLocation}
		</if>	
	</select>
	<select id="selectTripList" parameterType="hashmap" resultType="com.example.mini.model.Trip">
		SELECT T.TRIPNO,
		    T_KIND,
		    T_ADDR,
		    T_CDATETIME,
		    T_NAME,
		    T_CONTENT,
		    MIN(SRCIMGNO) AS SRCIMGNO,
		    MIN(IMGSRC) AS IMGSRC,
		    MIN(IMGNAME) AS IMGNAME,
		    MIN(ORGNAME) AS ORGNAME,
		    MIN(IMGTYPE) AS IMGTYPE
		FROM mini_db2.T1_TRIP T
		LEFT JOIN mini_db2.T1_TRIPIMAGE TI ON TI.TRIPNO = T.TRIPNO	
		WHERE T_KIND = #{tKind}
		<if test="tName != '' and tName != null">
			AND T_NAME LIKE CONCAT('%', #{tName}, '%')
		</if>
		GROUP BY T.TRIPNO, T_KIND, T_ADDR, T_CDATETIME, T_NAME, T_CONTENT
		LIMIT #{startNum}, 5
		
	</select>
	<select id="selectTripCnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) AS CNT
		FROM mini_db2.T1_TRIP
		WHERE T_KIND = #{tKind}
		<if test="tName != '' and tName != null">
			AND T_NAME LIKE CONCAT('%', #{tName}, '%')
		</if>
	</select>
	
	<select id="selectTripInfo" parameterType="hashmap" resultType="com.example.mini.model.Trip">
		SELECT T.TRIPNO,
		    T_KIND,
		    T_ADDR,
		    T_CDATETIME,
		    T_NAME,
		    T_CONTENT,
		    SRCIMGNO,
		    IMGSRC,
		    IMGNAME,
		    ORGNAME,
		    IMGTYPE
		FROM mini_db2.T1_TRIP T
		LEFT JOIN mini_db2.T1_TRIPIMAGE TI ON TI.TRIPNO = T.TRIPNO
		WHERE T.TRIPNO = #{tripNo}
			AND THUMBNAILYN = 'Y'
	</select>
	
	<select id="selectTripImgList" parameterType="hashmap" resultType="com.example.mini.model.Trip">
		SELECT T.TRIPNO,
		    T_KIND,
		    T_ADDR,
		    T_CDATETIME,
		    T_NAME,
		    T_CONTENT,
		    SRCIMGNO,
		    IMGSRC,
		    IMGNAME,
		    ORGNAME,
		    IMGTYPE
		FROM mini_db2.T1_TRIP T
		LEFT JOIN mini_db2.T1_TRIPIMAGE TI ON TI.TRIPNO = T.TRIPNO
		WHERE T.TRIPNO = #{tripNo}
			AND THUMBNAILYN = 'N'
	</select>
	
	<insert id="insertWedding" parameterType="hashmap"  useGeneratedKeys="true" keyProperty="id" keyColumn="weddingNo">
		INSERT INTO T1_WEDDING
			(WEDDINGNO, W_NAME, W_LOCATION, W_ADDR, W_URL, W_CDATETIME)
		VALUES 
			(NULL, #{wName}, #{wLocation}, #{wAddr}, #{wUrl}, NOW())
	</insert>
	<insert id="insertTrip" parameterType="hashmap"  useGeneratedKeys="true" keyProperty="id" keyColumn="tripNo">
		INSERT INTO T1_TRIP
			(TRIPNO, T_KIND, T_ADDR, T_CDATETIME, T_NAME, T_CONTENT)
		VALUES 
			(NULL, #{tKind}, #{tAddr}, NOW(), #{tName}, #{tContent})
	</insert>
	<insert id="insertTripImg">
		INSERT INTO T1_TRIPIMAGE
		VALUES (NULL, #{tripNo}, #{imgSrc}, #{imgName}, #{orgName}, #{imgType}, 'Y')
	</insert>
	<insert id="insertTripImgList">
		INSERT INTO T1_TRIPIMAGE
		VALUES (NULL, #{tripNo}, #{imgSrc}, #{imgName}, #{orgName}, #{imgType}, 'N')
	</insert>
	<insert id="insertWeddingImg">
		INSERT INTO T1_WEDDINGIMAGE
		VALUES (NULL, #{weddingNo}, #{imgSrc}, #{imgName}, #{orgName}, #{imgType})
	</insert>
	<delete id="deleteWedding" parameterType="hashmap">
		DELETE FROM mini_db2.T1_WEDDING
		WHERE WEDDINGNO = #{weddingNo}
	</delete>
		<delete id="deleteTrip" parameterType="hashmap">
		DELETE FROM mini_db2.T1_TRIP
		WHERE TRIPNO = #{tripNo}
	</delete>
	
	<update id="updateWedding" parameterType="hashmap" >
		UPDATE mini_db2.T1_WEDDING 
		SET 
			W_NAME = #{wName},
			W_LOCATION = #{wLocation},
			W_ADDR = #{wAddr},
			W_URL = #{wUrl},
			W_UDATETIME = NOW()
		WHERE 
			WEDDINGNO = #{weddingNo}
	</update>
	
	<update id="updateTrip" parameterType="hashmap" >
		UPDATE mini_db2.T1_TRIP
		SET 
			T_NAME = #{tName},
			T_ADDR = #{tAddr},
			T_KIND = #{tKind},
			T_CONTENT = #{tContent},
			T_UDATETIME = NOW()
		WHERE 
			TRIPNO = #{tripNo}
	</update>
	
	<select id="selectWeddingInfo" parameterType="hashmap" resultType="com.example.mini.model.Wedding">
		SELECT W.WEDDINGNO,
			W_NAME,
			W_LOCATION,
			W_ADDR,
			W_URL,
			W_CDATETIME,
			IMGSRC
		FROM mini_db2.T1_WEDDING W
		LEFT JOIN mini_db2.T1_WEDDINGIMAGE WI ON WI.WEDDINGNO = W.WEDDINGNO
		WHERE W.WEDDINGNO = #{weddingNo}
	</select>
</mapper>
<!-- 	ㅇㄹ<select id="selectUserCnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) AS CNT
		FROM mini_db2.T1_USER
		WHERE USERID = #{userId}
	</select>
	
	<insert id="insertUser" parameterType="hashmap">
		INSERT INTO T1_USER
			(USERID, PASSWORD, U_NAME, PARTNER, GENDER, U_ADDRNO, U_ADDR1, U_ADDR2, U_PHONE, 
			U_EMAIL, BIRTH, WEDDINGDAY, CDATETIME, UDATETIME, STATUS, BANK, BANKACCOUNT)
		VALUES 
			(#{userId}, #{pwd}, #{uName}, #{partner}, #{gender}, #{addrNo}, #{addr1}, #{addr2}, #{phoneNumber},
			#{emailAddr}, #{birthday}, #{weddingday}, NOW(), NULL, 'U', #{bank}, #{bankaccount} )
	</insert>
	<select id="selectFindId" parameterType="hashmap" resultType="com.example.mini.model.User">
		SELECT 
		    USERID,
		    U_NAME,
		    U_EMAIL,
		    STATUS
		FROM mini_db2.T1_USER
		WHERE U_NAME = #{uName} AND U_EMAIL = #{emailAddr}
	</select>
	<select id="selectFindPwd" parameterType="hashmap" resultType="com.example.mini.model.User">
		SELECT 
		    USERID,
		    U_NAME,
		    U_EMAIL,
		    STATUS
		FROM mini_db2.T1_USER
		WHERE USERID = #{userId} AND U_NAME = #{uName} AND U_EMAIL = #{emailAddr}
	</select>
	<update id="updatePwd" parameterType="hashmap">
		UPDATE mini_db2.T1_USER
		SET PASSWORD = #{pwd}
		WHERE USERID = #{userId}
	</update>
	 -->
	
	
